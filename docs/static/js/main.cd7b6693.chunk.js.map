{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","handleAgregar","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","setCategory","categoria","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,EAAcE,GACdC,EAAc,OAMd,2BACIM,KAAK,OACLC,MAAUR,EACVS,SAlBQ,SAACN,GACjB,IAAMO,EAASP,EAAEO,OAAOF,MACxBP,EAAcS,Q,uBCRTC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAThB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAY,QACb,+BAAKJ,EAAL,KACA,yBAAKK,IAAKf,EAAKgB,IAAKN,MCHnBO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDf2BK,CAAa1B,GAAjCa,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAEtB,OACI,oCACI,wBAAIJ,UAAY,0CAAhB,IAA2DhB,EAA3D,KACA,uBAAGgB,UAAY,uCAAf,IAAwDI,GAAW,mBAAnE,KACA,yBAAKJ,UAAU,iDACX,4BAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,WEdvBkB,EAAe,WAAO,IAAD,EAEEzC,mBAAS,CAAC,iBAFZ,mBAEvBa,EAFuB,KAEb6B,EAFa,KAQ9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAa3C,cANC,SAAC4C,GAAD,OAAeD,EAAY,CAACC,GAAF,mBAAgB9B,QAOxD,6BAEA,4BAEQA,EAASS,KAAI,SAAAsB,GAAG,OACZ,kBAAC,EAAD,CACGJ,IAAOI,EACP/B,SAAY+B,U,MChBvCC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cd7b6693.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ handleAgregar }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInput = (e) => {\r\n        const target = e.target.value;\r\n        setInputValue(target);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            handleAgregar(inputValue);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (   \r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value = { inputValue }\r\n                onChange = { handleInput }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    handleAgregar: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=yPQLtHcjVpJS2zHz84FbRgnDiQUA1Z4a&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className = \"card\">\r\n            <p> {title} </p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid =  ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"animate__animated animate__slideInLeft\"> {category} </h3>\r\n            <p className = \"animate__animated animate__bounceIn\"> { loading && 'Cargando Gifs...' } </p>\r\n            <div className=\"card-grid animate__animated animate__fadeInUp\">\r\n                <ol>\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [ category ])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [category, setCategory] = useState(['Blade Runner'])\r\n\r\n    //  Spread operator para copiar el estado anterior si es arreglo u objeto\r\n    const handleAgregar = (categoria) => setCategory([categoria, ...category]);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory handleAgregar = { handleAgregar } />\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    category.map(cat =>  (\r\n                        <GifGrid  \r\n                           key = {cat}\r\n                           category = {cat}\r\n                       />\r\n                        )\r\n                    ) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}